Problem ::  3170. Lexicographically Minimum String After Removing Stars
You are given a string s. It may contain any number of '*' characters. Your task is to remove all '*' characters.

While there is a '*', do the following operation:

Delete the leftmost '*' and the smallest non-'*' character to its left. If there are several smallest characters, you can delete any of them.
Return the 
lexicographically smallest
 resulting string after removing all '*' characters.
Time Complexity :: O(N)
Space Complexity :: O(N)

Code::

#pragma gcc optimize("03")
auto init = [](){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    return 'c';
}();
class Solution {
public:
    string clearStars(string s) {
        int n = s.size();
        vector<vector<int>>mp(26);
        vector<bool>remove(n,0);
        for(int i=0 ; i<n ; i++){
            if(s[i]=='*'){
                for(char c= 'a' ; c<='z' ; c++){
                    if(mp[c-'a'].size()==0)continue;
                    remove[mp[c-'a'].back()] = 1;
                    mp[c-'a'].pop_back();
                    break;
                }
            }
            else{
                mp[s[i]-'a'].push_back(i);
            }
        }
        string ans="";
        for(int i =0 ; i<n ; i++){
            if(s[i]!='*' && !remove[i])ans+=s[i];
        }
        return ans;
    }
};
